/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Class representing a DeployResult.
 */
class DeployResult {
  /**
   * Create a DeployResult.
   * @member {string} [id]
   * @member {number} [status]
   * @member {string} [statusText]
   * @member {string} [authorEmail]
   * @member {string} [author]
   * @member {string} [deployer]
   * @member {string} [message]
   * @member {string} [progress]
   * @member {date} [receivedTime]
   * @member {date} [startTime]
   * @member {date} [endTime]
   * @member {date} [lastSuccessEndTime]
   * @member {boolean} [complete]
   * @member {boolean} [active]
   * @member {boolean} [isTemp]
   * @member {boolean} [isReadonly]
   * @member {string} [url]
   * @member {string} [logUrl]
   * @member {string} [siteName]
   */
  constructor() {
  }

  /**
   * Defines the metadata of DeployResult
   *
   * @returns {object} metadata of DeployResult
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'DeployResult',
      type: {
        name: 'Composite',
        className: 'DeployResult',
        modelProperties: {
          id: {
            required: false,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          status: {
            required: false,
            serializedName: 'status',
            type: {
              name: 'Number'
            }
          },
          statusText: {
            required: false,
            serializedName: 'status_text',
            type: {
              name: 'String'
            }
          },
          authorEmail: {
            required: false,
            serializedName: 'author_email',
            type: {
              name: 'String'
            }
          },
          author: {
            required: false,
            serializedName: 'author',
            type: {
              name: 'String'
            }
          },
          deployer: {
            required: false,
            serializedName: 'deployer',
            type: {
              name: 'String'
            }
          },
          message: {
            required: false,
            serializedName: 'message',
            type: {
              name: 'String'
            }
          },
          progress: {
            required: false,
            serializedName: 'progress',
            type: {
              name: 'String'
            }
          },
          receivedTime: {
            required: false,
            serializedName: 'received_time',
            type: {
              name: 'DateTime'
            }
          },
          startTime: {
            required: false,
            serializedName: 'start_time',
            type: {
              name: 'DateTime'
            }
          },
          endTime: {
            required: false,
            serializedName: 'end_time',
            type: {
              name: 'DateTime'
            }
          },
          lastSuccessEndTime: {
            required: false,
            serializedName: 'last_success_end_time',
            type: {
              name: 'DateTime'
            }
          },
          complete: {
            required: false,
            serializedName: 'complete',
            type: {
              name: 'Boolean'
            }
          },
          active: {
            required: false,
            serializedName: 'active',
            type: {
              name: 'Boolean'
            }
          },
          isTemp: {
            required: false,
            serializedName: 'is_temp',
            type: {
              name: 'Boolean'
            }
          },
          isReadonly: {
            required: false,
            serializedName: 'is_readonly',
            type: {
              name: 'Boolean'
            }
          },
          url: {
            required: false,
            serializedName: 'url',
            type: {
              name: 'String'
            }
          },
          logUrl: {
            required: false,
            serializedName: 'log_url',
            type: {
              name: 'String'
            }
          },
          siteName: {
            required: false,
            serializedName: 'site_name',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = DeployResult;
