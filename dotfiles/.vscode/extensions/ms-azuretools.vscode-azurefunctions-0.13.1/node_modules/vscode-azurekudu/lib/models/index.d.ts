/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as moment from "moment";


/**
 * @class
 * Initializes a new instance of the CommandInput class.
 * @constructor
 * @member {string} [command]
 * @member {string} [dir]
 */
export interface CommandInput {
  command?: string;
  dir?: string;
}

/**
 * @class
 * Initializes a new instance of the CommandResult class.
 * @constructor
 * @member {string} [output]
 * @member {string} [error]
 * @member {number} [exitCode]
 */
export interface CommandResult {
  output?: string;
  error?: string;
  exitCode?: number;
}

/**
 * @class
 * Initializes a new instance of the DeployResult class.
 * @constructor
 * @member {string} [id]
 * @member {number} [status]
 * @member {string} [statusText]
 * @member {string} [authorEmail]
 * @member {string} [author]
 * @member {string} [deployer]
 * @member {string} [message]
 * @member {string} [progress]
 * @member {date} [receivedTime]
 * @member {date} [startTime]
 * @member {date} [endTime]
 * @member {date} [lastSuccessEndTime]
 * @member {boolean} [complete]
 * @member {boolean} [active]
 * @member {boolean} [isTemp]
 * @member {boolean} [isReadonly]
 * @member {string} [url]
 * @member {string} [logUrl]
 * @member {string} [siteName]
 */
export interface DeployResult {
  id?: string;
  status?: number;
  statusText?: string;
  authorEmail?: string;
  author?: string;
  deployer?: string;
  message?: string;
  progress?: string;
  receivedTime?: Date;
  startTime?: Date;
  endTime?: Date;
  lastSuccessEndTime?: Date;
  complete?: boolean;
  active?: boolean;
  isTemp?: boolean;
  isReadonly?: boolean;
  url?: string;
  logUrl?: string;
  siteName?: string;
}

/**
 * @class
 * Initializes a new instance of the LogEntry class.
 * @constructor
 * @member {date} [logTime]
 * @member {string} [id]
 * @member {string} [message]
 * @member {number} [type]
 * @member {string} [detailsUrl]
 */
export interface LogEntry {
  logTime?: Date;
  id?: string;
  message?: string;
  type?: number;
  detailsUrl?: string;
}

/**
 * @class
 * Initializes a new instance of the DiagnosticsSettings class.
 * @constructor
 * @member {boolean} [azureDriveEnabled]
 * @member {number} [azureDriveTraceLevel]
 * @member {boolean} [azureTableEnabled]
 * @member {number} [azureTableTraceLevel]
 * @member {boolean} [azureBlobEnabled]
 * @member {number} [azureBlobTraceLevel]
 */
export interface DiagnosticsSettings {
  azureDriveEnabled?: boolean;
  azureDriveTraceLevel?: number;
  azureTableEnabled?: boolean;
  azureTableTraceLevel?: number;
  azureBlobEnabled?: boolean;
  azureBlobTraceLevel?: number;
}

/**
 * @class
 * Initializes a new instance of the FunctionEnvelope class.
 * @constructor
 * @member {string} [name]
 * @member {string} [functionAppId]
 * @member {string} [scriptRootPathHref]
 * @member {string} [scriptHref]
 * @member {string} [configHref]
 * @member {string} [secretsFileHref]
 * @member {string} [href]
 * @member {object} [config]
 * @member {object} [files]
 * @member {string} [testData]
 */
export interface FunctionEnvelope {
  name?: string;
  functionAppId?: string;
  scriptRootPathHref?: string;
  scriptHref?: string;
  configHref?: string;
  secretsFileHref?: string;
  href?: string;
  config?: any;
  files?: { [propertyName: string]: string };
  testData?: string;
}

/**
 * @class
 * Initializes a new instance of the FunctionSecrets class.
 * @constructor
 * @member {string} [key]
 * @member {string} [triggerUrl]
 */
export interface FunctionSecrets {
  key?: string;
  triggerUrl?: string;
}

/**
 * @class
 * Initializes a new instance of the MasterKey class.
 * @constructor
 * @member {string} [masterKey]
 */
export interface MasterKey {
  masterKey?: string;
}

/**
 * @class
 * Initializes a new instance of the RepositoryInfo class.
 * @constructor
 * @member {number} [type]
 * @member {string} [gitUrl]
 */
export interface RepositoryInfo {
  type?: number;
  gitUrl?: string;
}

/**
 * @class
 * Initializes a new instance of the RuntimeInfo class.
 * @constructor
 * @member {array} [nodejs]
 * @member {object} [system]
 */
export interface RuntimeInfo {
  nodejs?: { [propertyName: string]: string }[];
  system?: any;
}

/**
 * @class
 * Initializes a new instance of the SiteExtensionInfo class.
 * @constructor
 * @member {string} [id]
 * @member {string} [title]
 * @member {number} [type]
 * @member {string} [summary]
 * @member {string} [description]
 * @member {string} [version]
 * @member {string} [extensionUrl]
 * @member {string} [projectUrl]
 * @member {string} [iconUrl]
 * @member {string} [licenseUrl]
 * @member {string} [feedUrl]
 * @member {array} [authors]
 * @member {string} [installerCommandLineParams]
 * @member {date} [publishedDateTime]
 * @member {number} [downloadCount]
 * @member {boolean} [localIsLatestVersion]
 * @member {string} [localPath]
 * @member {date} [installedDateTime]
 * @member {string} [provisioningState]
 * @member {string} [comment]
 */
export interface SiteExtensionInfo {
  id?: string;
  title?: string;
  type?: number;
  summary?: string;
  description?: string;
  version?: string;
  extensionUrl?: string;
  projectUrl?: string;
  iconUrl?: string;
  licenseUrl?: string;
  feedUrl?: string;
  authors?: string[];
  installerCommandLineParams?: string;
  publishedDateTime?: Date;
  downloadCount?: number;
  localIsLatestVersion?: boolean;
  localPath?: string;
  installedDateTime?: Date;
  provisioningState?: string;
  comment?: string;
}

/**
 * @class
 * Initializes a new instance of the WebHook class.
 * @constructor
 * @member {string} [id]
 * @member {string} [event]
 * @member {string} [url]
 * @member {boolean} [insecureSsl]
 * @member {string} [lastStatus]
 * @member {string} [lastReason]
 * @member {date} [lastDatetime]
 * @member {string} [lastContext]
 */
export interface WebHook {
  id?: string;
  event?: string;
  url?: string;
  insecureSsl?: boolean;
  lastStatus?: string;
  lastReason?: string;
  lastDatetime?: Date;
  lastContext?: string;
}
