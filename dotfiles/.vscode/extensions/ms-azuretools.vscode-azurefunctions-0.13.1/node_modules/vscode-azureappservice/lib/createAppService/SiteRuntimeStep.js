"use strict";
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const vscode_azureextensionui_1 = require("vscode-azureextensionui");
const extensionVariables_1 = require("../extensionVariables");
const AppKind_1 = require("./AppKind");
class SiteRuntimeStep extends vscode_azureextensionui_1.AzureWizardPromptStep {
    prompt(wizardContext) {
        return __awaiter(this, void 0, void 0, function* () {
            if (!wizardContext.newSiteRuntime && wizardContext.newSiteOS === AppKind_1.WebsiteOS.linux) {
                if (wizardContext.newSiteKind === AppKind_1.AppKind.functionapp) {
                    const runtimeItems = [
                        { label: 'JavaScript', data: 'node' },
                        { label: '.NET', data: 'dotnet' },
                        { label: 'Python', description: '(Preview)', data: 'python' }
                    ];
                    wizardContext.newSiteRuntime = (yield extensionVariables_1.ext.ui.showQuickPick(runtimeItems, { placeHolder: 'Select a runtime for your new Linux app.' })).data;
                }
                else {
                    const runtimeItems = this.getLinuxRuntimeStack().map((rt) => {
                        return {
                            id: rt.name,
                            label: rt.displayName,
                            description: '',
                            data: rt
                        };
                    });
                    wizardContext.newSiteRuntime = (yield extensionVariables_1.ext.ui.showQuickPick(runtimeItems, { placeHolder: 'Select a runtime for your new Linux app.' })).data.name;
                }
            }
            return wizardContext;
        });
    }
    // tslint:disable-next-line:max-func-body-length
    getLinuxRuntimeStack() {
        return [
            {
                name: 'node|10.10',
                displayName: 'Node.js 10.10 (LTS - Recommended for new apps)'
            },
            {
                name: 'node|4.4',
                displayName: 'Node.js 4.4'
            },
            {
                name: 'node|4.5',
                displayName: 'Node.js 4.5'
            },
            {
                name: 'node|6.2',
                displayName: 'Node.js 6.2'
            },
            {
                name: 'node|6.6',
                displayName: 'Node.js 6.6'
            },
            {
                name: 'node|6.9',
                displayName: 'Node.js 6.9'
            },
            {
                name: 'node|6.10',
                displayName: 'Node.js 6.10'
            },
            {
                name: 'node|6.11',
                displayName: 'Node.js 6.11'
            },
            {
                name: 'node|8.0',
                displayName: 'Node.js 8.0'
            },
            {
                name: 'node|8.1',
                displayName: 'Node.js 8.1'
            },
            {
                name: 'node|8.2',
                displayName: 'Node.js 8.2'
            },
            {
                name: 'node|8.8',
                displayName: 'Node.js 8.8'
            },
            {
                name: 'node|8.9',
                displayName: 'Node.js 8.9'
            },
            {
                name: 'node|9.4',
                displayName: 'Node.js 9.4'
            },
            {
                name: 'node|10.1',
                displayName: 'Node.js 10.1'
            },
            {
                name: 'php|5.6',
                displayName: 'PHP 5.6'
            },
            {
                name: 'php|7.0',
                displayName: 'PHP 7.0'
            },
            {
                name: 'php|7.2',
                displayName: 'PHP 7.2'
            },
            {
                name: 'dotnetcore|1.0',
                displayName: '.NET Core 1.0'
            },
            {
                name: 'dotnetcore|1.1',
                displayName: '.NET Core 1.1'
            },
            {
                name: 'dotnetcore|2.0',
                displayName: '.NET Core 2.0'
            },
            {
                name: 'dotnetcore|2.1',
                displayName: '.NET Core 2.1'
            },
            {
                name: 'ruby|2.3',
                displayName: 'Ruby 2.3'
            },
            {
                name: 'tomcat|8.5-jre8',
                displayName: '[Preview] Tomcat 8.5 (JRE 8)'
            },
            {
                name: 'tomcat|9.0-jre8',
                displayName: '[Preview] Tomcat 9.0 (JRE 8)'
            },
            {
                name: 'java|8-jre8',
                displayName: '[Preview] Java SE (JRE 8)'
            },
            {
                name: 'python|3.7',
                displayName: '[Preview] Python 3.7'
            }
        ];
    }
}
exports.SiteRuntimeStep = SiteRuntimeStep;
//# sourceMappingURL=SiteRuntimeStep.js.map